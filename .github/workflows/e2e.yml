name: "Tests for this repo"
on:
  workflow_call:

jobs:
  success_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          module_base: "tests/success"

  success_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/lint
        with:
          module_base: "tests/success"

  success_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/build
        with:
          module_base: "tests/success"
          subdir: "./cmd/hello-world"

  success_tests_versioned:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          module_base: "tests/go1.20"

  success_lint_versioned:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/lint
        with:
          module_base: "tests/go1.20"

  success_build_versioned:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/build
        with:
          module_base: "tests/go1.20"
          subdir: "./cmd/hello-world"

  # Test jobs that expect failure:
  failure_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          module_base: "tests/test-failure"
        continue-on-error: true
        id: failure
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}

  failure_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/build
        with:
          module_base: "tests/build-failure"
        id: failure
        continue-on-error: true
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}

  failure_lint_fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/lint
        with:
          module_base: "tests/fmt-failure"
        id: failure
        continue-on-error: true
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}

  failure_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/lint
        with:
          module_base: "tests/lint-failure"
        id: failure
        continue-on-error: true
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}

  # Testing that we pass the go_version argument through (by failing
  # the build on the wrong one):
  failure_test_version_mismatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/test
        with:
          go_version: "1.18"
          module_base: "tests/go1.20"
        continue-on-error: true
        id: failure
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}

  failure_build_version_mismatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/build
        with:
          go_version: "1.18"
          module_base: "tests/go1.20"
        continue-on-error: true
        id: failure
      - name: Expect failure
        run: |
          echo "::setFailed::Expected the failure step to fail; instead: ${{steps.failure.outcome}}"
          exit 1
        if: ${{ success() && steps.failure.outcome != 'failure' }}
