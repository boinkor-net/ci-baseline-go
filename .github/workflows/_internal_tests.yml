name: "Tests for this repo"
on:
  workflow_call:

jobs:
  success_tests:
    uses: "./.github/workflows/ci_baseline_go_tests.yml"
    secrets: inherit
    with:
      module_base: "tests/success"

  success_lints:
    uses: "./.github/workflows/ci_baseline_go_tests.yml"
    secrets: inherit
    with:
      module_base: "tests/success"

  # Test jobs that expect failure; note that these need to be named
  # exactly after the _internal_<test job>_result output.
  failure_tests:
    uses: "./.github/workflows/ci_baseline_go_tests.yml"
    secrets: inherit
    with:
      module_base: "tests/test-failure"
      _internal_continue_on_error: true

  failure_build:
    uses: "./.github/workflows/ci_baseline_go_tests.yml"
    secrets: inherit
    with:
      module_base: "tests/build-failure"
      _internal_continue_on_error: true

  failure_fmt:
    uses: "./.github/workflows/ci_baseline_go_lints.yml"
    secrets: inherit
    with:
      module_base: "tests/fmt-failure"
      _internal_continue_on_error: true

  failure_golangci_lint:
    uses: "./.github/workflows/ci_baseline_go_lints.yml"
    secrets: inherit
    with:
      module_base: "tests/lint-failure"
      _internal_continue_on_error: true

  all_failure_tests:
    runs-on: ubuntu-latest
    needs:
      - failure_tests
      - failure_build
      - failure_fmt
      - failure_golangci_lint
    steps:
      - name: transform the outcomes
        id: outcomes
        env:
          NEEDS_JSON: ${{toJSON(needs)}}
        run: >
          echo "all_failure=$(echo "$NEEDS_JSON" | jq '. | to_entries | map({value: .value, key: (.key | sub("^failure_"; ""))}) | map(.value.outputs["_internal_" + .key + "_result"] == "failure") | all')" >>$GITHUB_OUTPUT
      - name: debug
        env:
          OUTCOMES: ${{toJSON(steps.outcomes)}}
        run: echo $OUTCOMES
      - name: failure
        run: exit 1
        if: steps.outcomes.outputs.all_failure == 'true'
